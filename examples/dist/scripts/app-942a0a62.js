"use strict";angular.module("MyApp",["MyApp.config","ngResource","ngMessages","ngRoute","ngAnimate","mgcrea.ngStrap"]).config(["$routeProvider","$locationProvider",function(e){e.when("/",{templateUrl:"views/home.html",controller:"MainCtrl"}).when("/test",{templateUrl:"views/test.html",controller:"TestCtrl"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl"}).when("/editprofile",{templateUrl:"views/editprofile.html",controller:"EditProfileCtrl"}).when("/forgot",{templateUrl:"views/forgotpassword.html",controller:"ForgotPasswordCtrl"}).when("/resetpassword",{templateUrl:"views/resetpassword.html",controller:"ResetPasswordCtrl"}).otherwise({redirectTo:"/"})}]).config(["$httpProvider",function(e){e.interceptors.push(["$rootScope","$q","$window","$location",function(e,r,s,o){return{request:function(e){return s.localStorage.token&&(e.headers.Authorization="Bearer "+s.localStorage.token),e},responseError:function(n){return 401===n.status&&(delete s.localStorage.token,e.currentUser=null,o.path("/login")),r.reject(n)}}}])}]).run(["$rootScope","$interval","Auth","KeepAliveInterval",function(e,r,s,o){var n;e.currentUser&&(e.loggedin=!0),e.$watch("loggedin",function(){e.loggedin?n=r(function(){s.keepAlive()},1e3*o):r.cancel(n)})}]),angular.module("MyApp.config",[]).constant("apiUrl","http://api-auth.projectalfa.eu").constant("apiUrlLocal","http://localhost:3002").constant("KeepAliveInterval","250"),angular.module("MyApp").directive("passwordStrength",function(){return{restrict:"A",require:"ngModel",link:function(e,r,s,o){var n=r.children(),a=Array.prototype.slice.call(n.children()),t=a.slice(-1)[0],i=a.slice(-2),l=a.slice(-3),d=a.slice(-4);r.after(n),r.bind("keyup",function(){angular.forEach(a,function(e){e.style.backgroundColor="#ebeef1"}),o.$modelValue&&(o.$modelValue.length>8?angular.forEach(d,function(e){e.style.backgroundColor="#008cdd"}):o.$modelValue.length>5?angular.forEach(l,function(e){e.style.backgroundColor="#6ead09"}):o.$modelValue.length>3?angular.forEach(i,function(e){e.style.backgroundColor="#e09115"}):t.style.backgroundColor="#e01414")})},template:'<span class="password-strength-indicator"><span></span><span></span><span></span><span></span></span>'}}),angular.module("MyApp").controller("MainCtrl",["$scope",function(){}]),angular.module("MyApp").controller("NavbarCtrl",["$rootScope","$scope","$message","$location","Auth",function(e,r,s,o,n){r.logout=function(){e.loggedin=!1,n.logout(),o.path("/"),s("You have been logged out.")}}]),angular.module("MyApp").controller("LoginCtrl",["$rootScope","$scope","$location","$message","Auth",function(e,r,s,o,n){r.login=function(){r.inProgress=!0,n.login({username:r.username,password:r.password}).success(function(){e.loggedin=!0,s.path("/"),r.inProgress=!1,o("You have successfully logged in.")}).error(function(){r.inProgress=!1,o("Invalid username or password!")})},r.pageClass="fadeZoom"}]),angular.module("MyApp").controller("SignupCtrl",["$scope","Auth","$location","$message","$parse",function(e,r,s,o,n){e.signup=function(){e.inProgress=!0,r.signup({username:e.username,email:e.email,password:e.password}).success(function(){e.inProgress=!1,s.path("/"),o("Your account has been created.")}).error(function(r){e.inProgress=!1;for(var s in r){var o=r[s],a=n("signupForm."+o.param+".$error.serverMessage");e.signupForm[o.param].$setValidity("serverMessage",!1),a.assign(e,o.msg)}})},e.pageClass="fadeZoom",e.keyPress=function(){e.signupForm.$invalid&&e.signupForm.$submitted&&(e.signupForm.username.$setValidity("serverMessage",!0),e.signupForm.email.$setValidity("serverMessage",!0))}}]),angular.module("MyApp").controller("EditProfileCtrl",["$rootScope","$scope","$http","apiUrl","Auth","$parse","$message","$location",function(e,r,s,o,n,a,t,i){var l=e.currentUser,d=function(){r.username=l.name,r.email=l.email,r.password=""};s.post(o+"/auth/checkauth").success(function(){d()}).error(function(){}),r.editSubmit=function(){r.inProgress=!0,n.editProfile({username:r.username,email:r.email,password:r.password}).success(function(e){t("Data not modified"===e.msg?e.msg:"Data saved"),""!==r.password&&(r.password=""),r.inProgress=!1}).error(function(e){r.inProgress=!1;for(var s in e){var o=e[s],n=a("editForm."+o.param+".$error.serverMessage");r.editForm[o.param].$setValidity("serverMessage",!1),n.assign(r,o.msg)}})},r.removeAccount=function(){if(confirm("Are you sure?")){var e=n.removeAccount();e.success(function(){n.logout(),i.path("/")})}},r.keyPress=function(){r.editForm.$invalid&&r.editForm.$submitted&&(r.editForm.username.$setValidity("serverMessage",!0),r.editForm.email.$setValidity("serverMessage",!0))},r.pageClass="fadeZoom"}]),angular.module("MyApp").controller("ForgotPasswordCtrl",["$scope","Auth","$message",function(e,r,s){e.sendEmail=function(){e.inProgress=!0,e.mailSent=!1,r.forgotPassword({email:e.email}).success(function(){e.inProgress=!1,s("Password sent"),e.mailSent=!0}).error(function(r){e.inProgress=!1,s(r[0].msg)})},e.pageClass="fadeZoom"}]),angular.module("MyApp").controller("ResetPasswordCtrl",["$scope","$location","Auth","$message","$routeParams",function(e,r,s,o,n){e.resetPassword=function(){var a=n.token;return a?(e.inProgress=!0,void s.resetPassword(a,e.password).success(function(){r.path("/login"),e.inProgress=!1,o("You can now log in with the new password.")}).error(function(){e.inProgress=!1,o("Error reseting password!")})):void o("No reset token provided")}}]),angular.module("MyApp").controller("TestCtrl",["$scope","$http","apiUrl",function(e,r,s){r.get(s+"/api/test").success(function(e){console.log(e)}).error(function(e){console.log("error"),console.log(e)})}]),angular.module("MyApp").factory("Auth",["$http","$rootScope","$window","apiUrl",function(e,r,s,o){var n=s.localStorage.token;if(n)try{var a=JSON.parse(s.atob(n.split(".")[1]));r.currentUser=a.user,r.loggedin=!0}catch(t){console.log(t)}var i=function(e){s.localStorage.token=e;var o=JSON.parse(s.atob(e.split(".")[1]));r.currentUser=o.user};return{login:function(r){return e.post(o+"/auth/login",r).success(function(e){i(e.token)}).error(function(){delete s.localStorage.token})},signup:function(r){return e.post(o+"/auth/signup",r).success(function(e){i(e.token)})},logout:function(){delete s.localStorage.token,r.currentUser=null},editProfile:function(r){return e.post(o+"/auth/editprofile/",r).success(function(e){"Data not modified"!==e.msg&&i(e)})},forgotPassword:function(r){return e.post(o+"/remindpassword/",r)},resetPassword:function(r,s){var n={token:r,password:s};return e.post(o+"/resetpassword/",n)},removeAccount:function(){return e.post(o+"/auth/removeaccount/")},keepAlive:function(){return e.post(o+"/auth/keepalive/").success(function(e){i(e.token)})}}}]),angular.module("MyApp").factory("$message",["$alert",function(e){var r=function(r){e({title:r,type:"material",dismissable:!1,duration:3})};return r}]),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/editprofile.html",'<div class="container" ng-keydown="keyPress($event)"><div class="row"><div class="center-form panel"><div class="panel-body"><form method="post" ng-submit="editSubmit()" name="editForm" autocomplete="off"><h2 class="text-center">Edit Profile</h2><div class="form-group has-feedback" ng-class="{ \'has-error\' : editForm.username.$invalid && editForm.username.$dirty }"><input class="form-control input-lg" type="text" name="username" ng-model="username" placeholder="Name" required=""> <span class="ion-person form-control-feedback"></span><div class="help-block text-danger" ng-if="editForm.username.$dirty" ng-messages="editForm.username.$error"><div ng-message="required">Username is required.</div><div ng-message="serverMessage">{{editForm.username.$error.serverMessage}}</div></div></div><div class="form-group has-feedback" ng-class="{ \'has-error\' : editForm.email.$invalid && editForm.email.$dirty }"><input class="form-control input-lg" type="email" id="email" name="email" ng-model="email" placeholder="Email" required=""> <span class="ion-at form-control-feedback"></span><div class="help-block text-danger" ng-if="editForm.email.$dirty" ng-messages="editForm.email.$error"><div ng-message="required">Your email address is required.</div><div ng-message="email">Your email address is invalid.</div><div ng-message="serverMessage">{{editForm.email.$error.serverMessage}}</div></div></div><div class="form-group has-feedback" ng-class="{ \'has-error\' : editForm.password.$invalid && editForm.password.$dirty }"><input password-strength="" class="form-control input-lg" type="password" value="" name="password" ng-model="password" placeholder="Password"> <span class="ion-key form-control-feedback"></span></div><button type="submit" ng-disabled="editForm.$invalid || inProgress" class="btn btn-lg btn-block btn-primary"><span data-animation="true" ng-show="inProgress" class="ion-looping"></span> <span>Save</span></button><br></form><button class="btn btn-lg btn-block btn-error" ng-click="removeAccount()"><span>Delete Account</span></button></div></div></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/forgotpassword.html",'<div class="container"><div class="row"><div class="center-form panel"><div class="panel-body"><form method="post" ng-hide="mailSent" ng-submit="sendEmail()" name="forgotForm" autocomplete="off"><h2 class="text-center">Forgot Password</h2><div class="form-group has-feedback" ng-class="{ \'has-error\' : forgotForm.email.$invalid && forgotForm.email.$dirty }"><input class="form-control input-lg" type="email" name="email" ng-model="email" placeholder="Email" required=""> <span class="ion-at form-control-feedback"></span><div class="help-block text-danger" ng-if="forgotForm.email.$dirty" ng-messages="forgotForm.email.$error"><div ng-message="required">Email is required</div></div></div><button type="submit" ng-disabled="forgotForm.$invalid || inProgress" class="btn btn-lg btn-block btn-primary"><span data-animation="true" ng-show="inProgress" class="ion-looping"></span> <span>Send</span></button><br></form><div ng-show="mailSent">Check you mail to complete the reset password procedure</div></div></div></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/home.html",'<div class="container"><div class="row"><p ng-if="currentUser">Secured Home content</p><p ng-if="!currentUser">Public unsecured Home content</p></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/login.html",'<div class="container"><div class="row"><div class="center-form panel"><div class="panel-body"><h2 class="text-center">Log in</h2><form method="post" ng-submit="login()" name="loginForm"><div class="form-group has-feedback"><input class="form-control input-lg" type="text" name="username" ng-model="username" placeholder="Username or Email" required="" autofocus=""> <span class="ion-at form-control-feedback"></span></div><div class="form-group has-feedback"><input class="form-control input-lg" type="password" name="password" ng-model="password" placeholder="Password" required=""> <span class="ion-key form-control-feedback"></span></div><button type="submit" ng-disabled="loginForm.$invalid || inProgress" class="btn btn-lg btn-block btn-success"><span data-animation="true" ng-show="inProgress" class="ion-looping"></span> Log in</button><br><p class="text-center"><a href="#forgot">Forgot your password?</a></p><p class="text-center text-muted"><small>Don\'t have an account yet? <a href="/#signup">Sign up</a></small></p></form></div></div></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/resetpassword.html",'<div class="container"><div class="row"><div class="center-form panel"><div class="panel-body"><form method="post" ng-submit="resetPassword()" name="resetForm" autocomplete="off"><h2 class="text-center">Reset Password</h2><div class="form-group has-feedback" ng-class="{ \'has-error\' : resetForm.password.$invalid && resetForm.password.$dirty }"><input password-strength="" class="form-control input-lg" type="password" name="password" ng-model="password" placeholder="New password" required=""> <span class="ion-key form-control-feedback"></span><div class="help-block text-danger" ng-if="resetForm.password.$dirty" ng-messages="resetForm.password.$error"><div ng-message="required">Password is required</div></div></div><button type="submit" ng-disabled="resetForm.$invalid || inProgress" class="btn btn-lg btn-block btn-primary"><span data-animation="true" ng-show="inProgress" class="ion-looping"></span> <span>Send</span></button><br></form></div></div></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/signup.html",'<div class="container" ng-keydown="keyPress($event)"><div class="row"><div class="center-form panel"><div class="panel-body"><form method="post" ng-submit="signup()" name="signupForm"><h2 class="text-center">Sign up</h2><div class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.username.$invalid && signupForm.username.$dirty }"><input class="form-control input-lg" type="text" name="username" ng-model="username" placeholder="Name" required=""> <span class="ion-person form-control-feedback"></span><div class="help-block text-danger" ng-if="signupForm.username.$dirty" ng-messages="signupForm.username.$error"><div ng-message="required">Username is required.</div><div ng-message="serverMessage">{{signupForm.username.$error.serverMessage}}</div></div></div><div class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.email.$invalid && signupForm.email.$dirty }"><input class="form-control input-lg" type="email" id="email" name="email" ng-model="email" placeholder="Email" required="" autofocus=""> <span class="ion-at form-control-feedback"></span><div class="help-block text-danger" ng-if="signupForm.email.$dirty" ng-messages="signupForm.email.$error"><div ng-message="required">Your email address is required.</div><div ng-message="email">Your email address is invalid.</div><div ng-message="serverMessage">{{signupForm.email.$error.serverMessage}}</div></div></div><div class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.password.$invalid && signupForm.password.$dirty }"><input password-strength="" class="form-control input-lg" type="password" name="password" ng-model="password" placeholder="Password" required=""> <span class="ion-key form-control-feedback"></span><div class="help-block text-danger" ng-if="signupForm.password.$dirty" ng-messages="signupForm.password.$error"><div ng-message="required">Password is required.</div></div></div><p class="text-center text-muted"><small>By clicking on Sign up, you agree to <a href="#">terms & conditions</a> and <a href="#">privacy policy</a></small></p><button ng-disabled="signupForm.$invalid || inProgress" type="submit" class="btn btn-lg btn-block btn-primary"><span data-animation="true" ng-show="inProgress" class="ion-looping"></span> Sign up</button><br><p class="text-center text-muted">Already have an account? <a href="/#login">Log in now</a></p></form></div></div></div></div>')}])}(),function(e){try{e=angular.module("MyApp")}catch(r){e=angular.module("MyApp",[])}e.run(["$templateCache",function(e){e.put("views/test.html",'<div class="container"><div class="row"><p ng-if="currentUser">Only shown when logged in</p></div></div>')}])}();